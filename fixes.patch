Index: src/main/kotlin/ch/tardy/jooq/generated/tables/DummyData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/kotlin/ch/tardy/jooq/generated/tables/DummyData.kt	(revision 12ba89f6ccd6ee01a0217244c674aeeecaa95537)
+++ src/main/kotlin/ch/tardy/jooq/generated/tables/DummyData.kt	(date 1603283984075)
@@ -56,12 +56,12 @@
     /**
      * The column <code>public.dummy_data.numbers</code>.
      */
-    val NUMBERS: TableField<DummyDataRecord, Array<java.lang.Long?>?> = createField(DSL.name("numbers"), SQLDataType.BIGINT.arrayDataType, this, "")
+    val NUMBERS: TableField<DummyDataRecord, Array<Long>?> = createField(DSL.name("numbers"), SQLDataType.BIGINT.arrayDataType, this, "")
 
     /**
      * The column <code>public.dummy_data.strings</code>.
      */
-    val STRINGS: TableField<DummyDataRecord, Array<java.lang.String?>?> = createField(DSL.name("strings"), SQLDataType.VARCHAR.arrayDataType, this, "")
+    val STRINGS: TableField<DummyDataRecord, Array<String>?> = createField(DSL.name("strings"), SQLDataType.VARCHAR.arrayDataType, this, "")
 
     /**
      * The column <code>public.dummy_data.deleted</code>.
@@ -128,5 +128,5 @@
     // -------------------------------------------------------------------------
     // Row8 type methods
     // -------------------------------------------------------------------------
-    override fun fieldsRow(): Row8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.fieldsRow() as Row8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?>
+    override fun fieldsRow(): Row8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.fieldsRow() as Row8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?>
 }
Index: src/main/kotlin/ch/tardy/jooq/generated/tables/records/DummyDataRecord.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/kotlin/ch/tardy/jooq/generated/tables/records/DummyDataRecord.kt	(revision 12ba89f6ccd6ee01a0217244c674aeeecaa95537)
+++ src/main/kotlin/ch/tardy/jooq/generated/tables/records/DummyDataRecord.kt	(date 1603283984072)
@@ -19,37 +19,37 @@
  * This class is generated by jOOQ.
  */
 @Suppress("UNCHECKED_CAST")
-class DummyDataRecord() : UpdatableRecordImpl<DummyDataRecord>(DummyData.DUMMY_DATA), AuditableRecord, DeletableRecord, Record8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> {
+class DummyDataRecord() : UpdatableRecordImpl<DummyDataRecord>(DummyData.DUMMY_DATA), AuditableRecord, DeletableRecord, Record8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> {
 
     var id: Long?
         set(value) = set(0, value)
         get() = get(0) as Long?
 
-    var numbers: Array<java.lang.Long?>?
+    var numbers: Array<Long>?
         set(value) = set(1, value)
-        get() = get(1) as Array<java.lang.Long?>?
+        get() = get(1) as Array<Long>?
 
-    var strings: Array<java.lang.String?>?
+    var strings: Array<String>?
         set(value) = set(2, value)
-        get() = get(2) as Array<java.lang.String?>?
+        get() = get(2) as Array<String>?
 
-    var deleted: Boolean?
+    override var deleted: Boolean?
         set(value) = set(3, value)
         get() = get(3) as Boolean?
 
-    var createdBy: String?
+    override var createdBy: String?
         set(value) = set(4, value)
         get() = get(4) as String?
 
-    var createdDate: OffsetDateTime?
+    override var createdDate: OffsetDateTime?
         set(value) = set(5, value)
         get() = get(5) as OffsetDateTime?
 
-    var lastModifiedBy: String?
+    override var lastModifiedBy: String?
         set(value) = set(6, value)
         get() = get(6) as String?
 
-    var lastModifiedDate: OffsetDateTime?
+    override var lastModifiedDate: OffsetDateTime?
         set(value) = set(7, value)
         get() = get(7) as OffsetDateTime?
 
@@ -63,27 +63,27 @@
     // Record8 type implementation
     // -------------------------------------------------------------------------
 
-    override fun fieldsRow(): Row8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.fieldsRow() as Row8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?>
-    override fun valuesRow(): Row8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.valuesRow() as Row8<Long?, Array<java.lang.Long?>?, Array<java.lang.String?>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?>
+    override fun fieldsRow(): Row8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.fieldsRow() as Row8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?>
+    override fun valuesRow(): Row8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.valuesRow() as Row8<Long?, Array<Long>?, Array<String>?, Boolean?, String?, OffsetDateTime?, String?, OffsetDateTime?>
     override fun field1(): Field<Long?> = DummyData.DUMMY_DATA.ID
-    override fun field2(): Field<Array<java.lang.Long?>?> = DummyData.DUMMY_DATA.NUMBERS
-    override fun field3(): Field<Array<java.lang.String?>?> = DummyData.DUMMY_DATA.STRINGS
+    override fun field2(): Field<Array<Long>?> = DummyData.DUMMY_DATA.NUMBERS
+    override fun field3(): Field<Array<String>?> = DummyData.DUMMY_DATA.STRINGS
     override fun field4(): Field<Boolean?> = DummyData.DUMMY_DATA.DELETED
     override fun field5(): Field<String?> = DummyData.DUMMY_DATA.CREATED_BY
     override fun field6(): Field<OffsetDateTime?> = DummyData.DUMMY_DATA.CREATED_DATE
     override fun field7(): Field<String?> = DummyData.DUMMY_DATA.LAST_MODIFIED_BY
     override fun field8(): Field<OffsetDateTime?> = DummyData.DUMMY_DATA.LAST_MODIFIED_DATE
     override fun component1(): Long? = id
-    override fun component2(): Array<java.lang.Long?>? = numbers
-    override fun component3(): Array<java.lang.String?>? = strings
+    override fun component2(): Array<Long>? = numbers
+    override fun component3(): Array<String>? = strings
     override fun component4(): Boolean? = deleted
     override fun component5(): String? = createdBy
     override fun component6(): OffsetDateTime? = createdDate
     override fun component7(): String? = lastModifiedBy
     override fun component8(): OffsetDateTime? = lastModifiedDate
     override fun value1(): Long? = id
-    override fun value2(): Array<java.lang.Long?>? = numbers
-    override fun value3(): Array<java.lang.String?>? = strings
+    override fun value2(): Array<Long>? = numbers
+    override fun value3(): Array<String>? = strings
     override fun value4(): Boolean? = deleted
     override fun value5(): String? = createdBy
     override fun value6(): OffsetDateTime? = createdDate
@@ -95,12 +95,12 @@
         return this
     }
 
-    override fun value2(value: Array<java.lang.Long?>?): DummyDataRecord {
+    override fun value2(value: Array<Long>?): DummyDataRecord {
         numbers = value
         return this
     }
 
-    override fun value3(value: Array<java.lang.String?>?): DummyDataRecord {
+    override fun value3(value: Array<String>?): DummyDataRecord {
         strings = value
         return this
     }
@@ -130,7 +130,7 @@
         return this
     }
 
-    override fun values(value1: Long?, value2: Array<java.lang.Long?>?, value3: Array<java.lang.String?>?, value4: Boolean?, value5: String?, value6: OffsetDateTime?, value7: String?, value8: OffsetDateTime?): DummyDataRecord {
+    override fun values(value1: Long?, value2: Array<Long>?, value3: Array<String>?, value4: Boolean?, value5: String?, value6: OffsetDateTime?, value7: String?, value8: OffsetDateTime?): DummyDataRecord {
         this.value1(value1)
         this.value2(value2)
         this.value3(value3)
@@ -145,7 +145,7 @@
     /**
      * Create a detached, initialised DummyDataRecord
      */
-    constructor(id: Long? = null, numbers: Array<java.lang.Long?>? = null, strings: Array<java.lang.String?>? = null, deleted: Boolean? = null, createdBy: String? = null, createdDate: OffsetDateTime? = null, lastModifiedBy: String? = null, lastModifiedDate: OffsetDateTime? = null) : this() {
+    constructor(id: Long? = null, numbers: Array<Long>? = null, strings: Array<String>? = null, deleted: Boolean? = null, createdBy: String? = null, createdDate: OffsetDateTime? = null, lastModifiedBy: String? = null, lastModifiedDate: OffsetDateTime? = null) : this() {
         this.id = id
         this.numbers = numbers
         this.strings = strings
Index: src/main/kotlin/ch/tardy/jooq/generated/tables/pojos/DummyDataPojo.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/kotlin/ch/tardy/jooq/generated/tables/pojos/DummyDataPojo.kt	(revision 12ba89f6ccd6ee01a0217244c674aeeecaa95537)
+++ src/main/kotlin/ch/tardy/jooq/generated/tables/pojos/DummyDataPojo.kt	(date 1603283984076)
@@ -16,5 +16,5 @@
  */
 @Suppress("UNCHECKED_CAST")
 data class DummyDataPojo(
-        var id: Long? = null, var numbers: Array<java.lang.Long?>? = null, var strings: Array<java.lang.String?>? = null, var deleted: Boolean? = null, var createdBy: String? = null, var createdDate: OffsetDateTime? = null, var lastModifiedBy: String? = null, var lastModifiedDate: OffsetDateTime? = null
+        var id: Long? = null, var numbers: Array<Long>? = null, var strings: Array<String>? = null, override var deleted: Boolean? = null, override var createdBy: String? = null, override var createdDate: OffsetDateTime? = null, override var lastModifiedBy: String? = null, override var lastModifiedDate: OffsetDateTime? = null
 ) : AuditableRecord, DeletableRecord, Serializable
Index: src/main/kotlin/ch/tardy/jooq/generated/tables/daos/DummyDataDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/kotlin/ch/tardy/jooq/generated/tables/daos/DummyDataDao.kt	(revision 12ba89f6ccd6ee01a0217244c674aeeecaa95537)
+++ src/main/kotlin/ch/tardy/jooq/generated/tables/daos/DummyDataDao.kt	(date 1603283984078)
@@ -43,22 +43,22 @@
     /**
      * Fetch records that have <code>numbers BETWEEN lowerInclusive AND upperInclusive</code>
      */
-    fun fetchRangeOfNumbers(lowerInclusive: Array<java.lang.Long?>?, upperInclusive: Array<java.lang.Long?>?): List<DummyDataPojo> = fetchRange(DummyData.DUMMY_DATA.NUMBERS, lowerInclusive, upperInclusive)
+    fun fetchRangeOfNumbers(lowerInclusive: Array<Long>?, upperInclusive: Array<Long>?): List<DummyDataPojo> = fetchRange(DummyData.DUMMY_DATA.NUMBERS, lowerInclusive, upperInclusive)
 
     /**
      * Fetch records that have <code>numbers IN (values)</code>
      */
-    fun fetchByNumbers(vararg values: Array<java.lang.Long?>): List<DummyDataPojo> = fetch(DummyData.DUMMY_DATA.NUMBERS, *values)
+    fun fetchByNumbers(vararg values: Array<Long>): List<DummyDataPojo> = fetch(DummyData.DUMMY_DATA.NUMBERS, *values)
 
     /**
      * Fetch records that have <code>strings BETWEEN lowerInclusive AND upperInclusive</code>
      */
-    fun fetchRangeOfStrings(lowerInclusive: Array<java.lang.String?>?, upperInclusive: Array<java.lang.String?>?): List<DummyDataPojo> = fetchRange(DummyData.DUMMY_DATA.STRINGS, lowerInclusive, upperInclusive)
+    fun fetchRangeOfStrings(lowerInclusive: Array<String>?, upperInclusive: Array<String>?): List<DummyDataPojo> = fetchRange(DummyData.DUMMY_DATA.STRINGS, lowerInclusive, upperInclusive)
 
     /**
      * Fetch records that have <code>strings IN (values)</code>
      */
-    fun fetchByStrings(vararg values: Array<java.lang.String?>): List<DummyDataPojo> = fetch(DummyData.DUMMY_DATA.STRINGS, *values)
+    fun fetchByStrings(vararg values: Array<String>): List<DummyDataPojo> = fetch(DummyData.DUMMY_DATA.STRINGS, *values)
 
     /**
      * Fetch records that have <code>deleted BETWEEN lowerInclusive AND upperInclusive</code>
